---
AWSTemplateFormatVersion: 2010-09-09
Description: Amazon EKS - Node Group

Parameters:

  NodeImageId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Description: AWS Systems Manager Parameter Store parameter of the AMI ID for the worker node instances.

  NodeAutoScalingGroupMinSize:
    Description: Minimum size of Node Group ASG.
    Type: Number
    Default: 1

  NodeAutoScalingGroupMaxSize:
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.
    Type: Number
    Default: 2

  NodeAutoScalingGroupDesiredCapacity:
    Description: Desired capacity of Node Group ASG.
    Type: Number
    Default: 1

  NodeAutoScalingGroupMinInstancesInService:
    Description: Minimum instances in service of the Node Group ASG at any given time.
    Type: Number
    Default: 1

  NodeAutoScalingGroupOnDemandPercentageAboveBase:
    Description: Percentage of nodes above the base capacity (minimum size) to launch as on-demand (rather than spot instances)
    Type: Number
    Default: 100

  NodeVolumeSize:
    Description: Node volume size
    Type: Number
    Default: 20

  ClusterName:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Type: String
    Default: ""

  NodeGroupName:
    Description: Unique identifier for the Node Group.
    Type: String

  ClusterControlPlaneSecurityGroup:
    Description: The security group of the cluster control plane.
    Type: AWS::EC2::SecurityGroup::Id

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: The subnets where workers can be created.  Please keep subnets to a single AZ.
    Type: List<AWS::EC2::Subnet::Id>

  NodeSecurityGroups:
    Description: The security groups to attach to the workers.
    Type: List<AWS::EC2::SecurityGroup::Id>

  NodeTargetGroups:
    Description: The target groups in which to register the workers.
    Type: List<String>

  NodeInstanceProfile:
    Description: The instance profile ARN to associate with the workers.
    Type: String

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EKS Cluster
        Parameters:
          - ClusterName
          - ClusterControlPlaneSecurityGroup
      - Label:
          default: Worker Node Configuration
        Parameters:
          - NodeGroupName
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupDesiredCapacity
          - NodeAutoScalingGroupMaxSize
          - NodeAutoScalingGroupOnDemandPercentageAboveBase
          - NodeInstanceProfile
          - NodeImageId
          - NodeVolumeSize
          - BootstrapArguments
      - Label:
          default: Worker Network Configuration
        Parameters:
          - VpcId
          - Subnets
          - NodeSecurityGroups
          - NodeTargetGroups

Resources:

  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
      MinSize: !Ref NodeAutoScalingGroupMinSize
      MaxSize: !Ref NodeAutoScalingGroupMaxSize
      VPCZoneIdentifier: !Ref Subnets
      TargetGroupARNs: !Ref NodeTargetGroups
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandBaseCapacity: !Ref NodeAutoScalingGroupMinSize
          OnDemandPercentageAboveBaseCapacity: !Ref NodeAutoScalingGroupOnDemandPercentageAboveBase
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NodeLaunchTemplate
            Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: m5.xlarge
            - InstanceType: m5d.xlarge
            - InstanceType: m5a.xlarge
            - InstanceType: m5ad.xlarge
            - InstanceType: r5.xlarge
            - InstanceType: r5d.xlarge
            - InstanceType: r5a.xlarge
            - InstanceType: r5ad.xlarge
      Tags:
        - Key: Name
          Value: !Sub ${ClusterName}-${NodeGroupName}
          PropagateAtLaunch: true
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: owned
          PropagateAtLaunch: true
        - Key: k8s.io/cluster-autoscaler/enabled
          Value: true
          PropagateAtLaunch: true
        - Key: !Sub k8s.io/cluster-autoscaler/${ClusterName}
          Value: true
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: !Ref NodeAutoScalingGroupMinInstancesInService
        PauseTime: PT2M

  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${ClusterName}-${NodeGroupName}
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !Ref NodeInstanceProfile
        ImageId: !Ref NodeImageId
        SecurityGroupIds: !Ref NodeSecurityGroups

        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              DeleteOnTermination: true
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              set -o xtrace
              /etc/eks/bootstrap.sh ${ClusterName} ${BootstrapArguments}
              /opt/aws/bin/cfn-signal --exit-code $? \
                       --stack  ${AWS::StackName} \
                       --resource NodeGroup  \
                       --region ${AWS::Region}

Outputs:
  AutoScalingGroupName:
    Description: The ASG Name
    Value: !Ref NodeGroup
