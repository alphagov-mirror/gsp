---
apiVersion: concourse.govsvc.uk/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: cd-smoke-test
  namespace: {{ .Values.global.cluster.name }}-main
spec:
  exposed: true
  config:

    task_toolbox: &task_toolbox
      type: docker-image
      source:
        repository: ((concourse.task-toolbox-image))
        tag: ((concourse.task-toolbox-tag))
        username: ((dockerhubpull-concourse.username))
        password: ((dockerhubpull-concourse.password))

    resource_types:
    - name: github
      type: registry-image
      source:
        repository: ((concourse.github-resource-image))
        tag: ((concourse.github-resource-tag))
        username: ((dockerhubpull-concourse.username))
        password: ((dockerhubpull-concourse.password))

    resources:
    - name: timer
      type: time
      icon: update
      source:
        interval: 4m

    - name: src
      type: github
      icon: github-circle
      source:
        uri: https://github.com/alphagov/gsp.git
        organization: alphagov
        owner: alphagov
        repository: gsp
        github_api_token: ((github.api-token))
        access_token: ((github.api-token))
        approvers: ((trusted-developers.github-accounts))
        required_approval_count: 0
        branch: ((cluster.releaseVersion))
        paths:
        - components/canary

    - name: ecr
      type: registry-image
      icon: layers
      source:
        username: ((canary.ImageRegistryUsername))
        password: ((canary.ImageRegistryPassword))
        repository: ((canary.ImageRepositoryURI))

    jobs:
    - name: build-deploy
      serial: true
      plan:
      - get: timer
        trigger: true
      - get: src
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: vito/oci-build-task}
          params:
            CONTEXT: src/components/canary
          inputs:
          - name: src
          outputs:
          - name: image
          run:
            path: build
      - put: ecr
        params:
          image: image/image.tar
          additional_tags: src/.git/short_ref
      - task: generate-chart-values
        config:
          platform: linux
          image_resource: *task_toolbox
          params:
            IMAGE_URI: ((canary.ImageRepositoryURI))
          inputs:
          - name: src
          - name: ecr
          outputs:
          - name: chart-values
          run:
            path: /bin/bash
            args:
              - -eu
              - -c
              - |
                echo "generating helm values for latest image versions..."
                IMAGE_TAG_TYPE=$(cat ecr/digest | cut -d ':' -f 1)
                IMAGE_TAG=$(cat ecr/digest | cut -d ':' -f 2)
                IMAGE_REPOSITORY="${IMAGE_URI}@${IMAGE_TAG_TYPE}"
                BUILD_TIMESTAMP="$(date +%s)"
                mkdir -p chart-values
                cat << EOF > ./overrides.yaml
                canary:
                  image:
                    repository: "${IMAGE_REPOSITORY}"
                    tag: "${IMAGE_TAG}"
                  chartCommitTimestamp: ${BUILD_TIMESTAMP}
                EOF
                echo "merging with chart values..."
                spruce merge ./src/components/canary/chart/values.yaml ./overrides.yaml | tee -a chart-values/values.yaml

      - task: render-manifests
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: src
          - name: chart-values
          outputs:
          - name: manifests
          params:
            CLUSTER_NAME: ((cluster.name))
            CLUSTER_DOMAIN: ((cluster.domain))
            RELEASE_NAME: ((cluster.name))
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "rendering chart with release name '${RELEASE_NAME}' and namespace '${RELEASE_NAMESPACE}'..."
              helm template \
                --name "${RELEASE_NAME}" \
                --namespace "${RELEASE_NAMESPACE}" \
                --set "global.cluster.name=${CLUSTER_NAME}" \
                --set "global.cluster.domain=${CLUSTER_DOMAIN}" \
                --values chart-values/values.yaml \
                --output-dir "./manifests/" \
                ./src/components/canary/chart

      - task: deploy-manifests
        timeout: 10m
        config:
          platform: linux
          image_resource: *task_toolbox
          inputs:
          - name: manifests
          params:
            KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
            KUBERNETES_TOKEN: ((namespace-deployer.token))
            KUBERNETES_API: kubernetes.default.svc
            RELEASE_NAMESPACE: ((namespace-deployer.namespace))
            APP_NAME: canary
          run:
            path: /bin/bash
            args:
            - -eu
            - -c
            - |
              echo "configuring kubectl"
              setup-kube-deployer

              echo "applying chart to ${RELEASE_NAMESPACE} namespace..."
              kapp deploy \
                -y \
                --namespace "${RELEASE_NAMESPACE}" \
                --allow-ns "${RELEASE_NAMESPACE}" \
                --app "${APP_NAME}" \
                --diff-changes \
                -f ./manifests/
              echo "Garbage collecting old kapp state changes..."
              kapp app-change gc --namespace "${RELEASE_NAMESPACE}" --app "${APP_NAME}" --yes

      - task: ping
        config:
          platform: linux
          image_resource: *task_toolbox
          params:
            CLUSTER_DOMAIN: ((cluster.domain))
            NAMESPACE: ((namespace-deployer.namespace))
          run:
            path: /bin/bash
            args:
              - -eu
              - -c
              - |
                echo "pinging https://canary.${NAMESPACE}.${CLUSTER_DOMAIN}/metrics to check ingress..."
                curl --silent --show-error --max-time 5 --fail https://canary.${NAMESPACE}.${CLUSTER_DOMAIN}/metrics
